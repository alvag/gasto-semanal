{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Presupuesto.js","components/Restante.js","helpers/helper.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","title","FormularioGasto","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","currentTarget","reset","focus","onSubmit","this","className","htmlFor","ref","id","type","placeholder","Component","Gasto","_this$props$gasto","Listado","gastos","map","index","Gasto_Gasto","key","Presupuesto","presupuesto","toFixed","Restante","restante","revisarPresupuesto","ControlPresupuesto","Fragment","Presupuesto_Presupuesto","Restante_Restante","App","state","obtenerPresupuesto","_callee","_ref2","regenerator_default","wrap","_context","prev","next","swal","input","allowOutsideClick","allowEscapeKey","inputValidator","Number","sent","setState","stop","push","restarPresupuesto","cantidad","components_Header","Formulario_FormularioGasto","Listado_Listado","ControlPresupuesto_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dd3bef8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n    return (\n        <header>\n            <h1>{props.title}</h1>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FormularioGasto extends Component {\n\n    nombreGasto = React.createRef();\n    cantidadGasto = React.createRef();\n\n    crearGasto = (e) => {\n        e.preventDefault();\n\n        const gasto = {\n            cantidadGasto: this.cantidadGasto.current.value,\n            nombreGasto: this.nombreGasto.current.value,\n        };\n\n        this.props.crearGasto(gasto);\n\n        e.currentTarget.reset();\n        this.nombreGasto.current.focus();\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.crearGasto}>\n                <h2>Agrega tus gastos aqui</h2>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Nombre del Gasto:</label>\n                    <input ref={this.nombreGasto} className=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Ej. Transporte\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"cantidad\">Cantidad:</label>\n                    <input ref={this.cantidadGasto} className=\"form-control\" id=\"cantidad\" type=\"number\" placeholder=\"Ej. 300\" />\n                </div>\n\n                <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Agregar\" />\n            </form>\n        );\n    }\n}\n\nFormularioGasto.propTypes = {\n    crearGasto: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Gasto extends Component {\n\n    render() {\n        const { cantidadGasto, nombreGasto } = this.props.gasto;\n\n        return (\n            <li className=\"gastos\">\n                <p>\n                    {nombreGasto}\n                    <span className=\"gasto\">$ {cantidadGasto}</span>\n                </p>\n            </li>\n        );\n    }\n\n}\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nexport default class Listado extends Component {\n\n    render() {\n        return (\n            <div className=\"gastos-realizados\">\n                <h2>Listado</h2>\n                {this.props.gastos.map((gasto, index) => (\n                    <Gasto key={index} gasto={gasto} />\n                ))}\n            </div>\n        );\n    }\n}\n\nListado.propTypes = {\n    gastos: PropTypes.array.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Presupuesto extends Component {\n\n    render() {\n        return (\n            <div className=\"alert alert-primary\">\n                Presupuesto: $ {this.props.presupuesto.toFixed(2)}\n            </div>\n        );\n    }\n}\n\nPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired\n};\n","import React, { Component } from 'react';\nimport { revisarPresupuesto } from '../helpers/helper';\nimport PropTypes from 'prop-types';\n\nexport default class Restante extends Component {\n\n    render() {\n        let presupuesto = this.props.presupuesto;\n        let restante = this.props.restante;\n        return (\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante $ {restante.toFixed(2)}\n            </div>\n        );\n    }\n}\n\nRestante.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n};\n","\nexport const revisarPresupuesto = (presupuesto, restante) => {\n    // Comprobar el 25% \n    if ((presupuesto / 4) > restante) {\n        return 'alert alert-danger';\n    } else if ((presupuesto / 2) > restante) {\n        return 'alert alert-warning';\n    } else {\n        return 'alert alert alert-success';\n    }\n};\n","import React, { Component } from 'react';\nimport Presupuesto from './Presupuesto';\nimport Restante from './Restante';\nimport PropTypes from 'prop-types';\n\nexport default class ControlPresupuesto extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <Presupuesto presupuesto={this.props.presupuesto} />\n\n                <Restante\n                    restante={this.props.restante}\n                    presupuesto={this.props.presupuesto}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n};\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport swal from 'sweetalert2';\nimport Header from './components/Header';\nimport FormularioGasto from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nclass App extends Component {\n\n    state = {\n        presupuesto: 0,\n        restante: 0,\n        gastos: []\n    }\n\n    componentDidMount() {\n        this.obtenerPresupuesto();\n    }\n\n    obtenerPresupuesto = async () => {\n        let { value: presupuesto } = await swal({\n            title: 'Ingresa tu presupuesto',\n            input: 'number',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            inputValidator: (value) => {\n                return (!value || Number(value) <= 0) && 'Ingresa una cantidad mayor que 0';\n\n            }\n        });\n        presupuesto = Number(presupuesto);\n        this.setState({ presupuesto, restante: presupuesto });\n    }\n\n    crearGasto = (gasto) => {\n        let gastos = this.state.gastos;\n        gastos.push(gasto);\n        this.restarPresupuesto(gasto.cantidadGasto);\n        this.setState({ gastos });\n    }\n\n    restarPresupuesto = cantidad => {\n        this.setState({\n            restante: this.state.restante - Number(cantidad)\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                < Header title=\"Gasto Semanal\" />\n\n                <div className=\"contenido-principal contenido\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <FormularioGasto crearGasto={this.crearGasto} />\n                        </div>\n\n                        <div className=\"col-6\">\n                            <Listado gastos={this.state.gastos} />\n\n                            <ControlPresupuesto\n                                presupuesto={this.state.presupuesto}\n                                restante={this.state.restante}\n                            />\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}